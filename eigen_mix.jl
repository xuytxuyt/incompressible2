using Revise, ApproxOperator, LinearAlgebra, Printf, TimerOutputs, SparseArrays
include("input.jl")

ndiv= 8
ndiv_p= 16
elements,nodes,nodes_p = import_fem_tri3("./msh/square_"*string(ndiv)*".msh","./msh/square_"*string(ndiv_p)*".msh")

n·µ§ = length(nodes)
n‚Çö = length(nodes_p)

s = 2.5*10/ndiv_p*ones(n‚Çö)
push!(nodes_p,:s‚ÇÅ=>s,:s‚ÇÇ=>s,:s‚ÇÉ=>s)

setùù≠!(elements["Œ©"])
set‚àáùù≠!(elements["Œ©"])
setùù≠!(elements["Œ©·µñ"])
setùù≠!(elements["Œì·µç"])

P = 1000
EÃÑ = 3e6
ŒΩÃÑ = 0.49999
# ŒΩÃÑ = 0.3
E = EÃÑ/(1.0-ŒΩÃÑ^2)
ŒΩ = ŒΩÃÑ/(1.0-ŒΩÃÑ)
L = 10
D = 10
I = D^3/10
EI = E*I
I = D^3/10
EI = E*I

prescribe!(elements["Œì·µç"],:g‚ÇÅ=>(x,y,z)->-P*y/6/EI*((6*L-3*x)*x + (2+ŒΩ)*(y^2-D^2/4)))
prescribe!(elements["Œì·µç"],:g‚ÇÇ=>(x,y,z)->P/6/EI*(3*ŒΩ*y^2*(L-x) + (4+5*ŒΩ)*D^2*x/4 + (3*L-x)*x^2))
prescribe!(elements["Œì·µç"],:n‚ÇÅ‚ÇÅ=>(x,y,z)->1.0)
prescribe!(elements["Œì·µç"],:n‚ÇÅ‚ÇÇ=>(x,y,z)->0.0)
prescribe!(elements["Œì·µç"],:n‚ÇÇ‚ÇÇ=>(x,y,z)->1.0)

ops = [
       Operator{:‚à´‚à´Œµ·µ¢‚±ºœÉ·µ¢‚±ºdxdy}(:E=>E,:ŒΩ=>ŒΩ),
       Operator{:‚à´‚à´p‚àávdxdy}(),
       Operator{:‚à´‚à´qpdxdy}(:E=>E,:ŒΩ=>ŒΩ),
       Operator{:‚à´v·µ¢t·µ¢ds}(),
       Operator{:‚à´v·µ¢g·µ¢ds}(:Œ±=>1e9*E),
       Operator{:H‚Çë_PlaneStress}(:E=>E,:ŒΩ=>ŒΩ)
]
ops·µõ = [
    Operator{:‚à´‚à´Œµ·µõ·µ¢‚±ºœÉ·µõ·µ¢‚±ºdxdy}(:E=>EÃÑ,:ŒΩ=>ŒΩÃÑ )
]
ops·µà = [
    Operator{:‚à´‚à´Œµ·µà·µ¢‚±ºœÉ·µà·µ¢‚±ºdxdy}(:E=>EÃÑ,:ŒΩ=>ŒΩÃÑ )
]

# k·µõ = zeros(2*n‚Çö,2*n‚Çö)
k·µà = zeros(2*n·µ§,2*n·µ§)
k·µç = zeros(2*n·µ§,2*n·µ§) 
k·µ§‚Çö = zeros(2*n·µ§,n‚Çö)
k‚Çö‚Çö = zeros(n‚Çö,n‚Çö)
# k‚Çö = zeros(n·µ§,n·µ§)
f = zeros(2*n·µ§)

ops·µà[1](elements["Œ©"],k·µà)
ops[2](elements["Œ©"],elements["Œ©·µñ"],k·µ§‚Çö)
ops[3](elements["Œ©·µñ"],k‚Çö‚Çö)
ops[5](elements["Œì·µç"],k·µç,f)


# k=k·µ§‚Çö*inv(k‚Çö‚Çö)*k·µ§‚Çö'
k=k·µ§‚Çö/k‚Çö‚Çö*k·µ§‚Çö'

a = eigvals(k,k·µà+k·µç)


