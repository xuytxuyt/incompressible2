using Revise, ApproxOperator, LinearAlgebra, XLSX
include("input.jl")

ndiv= 30
ndiv_n= 30
ndiv_v= 30
elements,nodes,nodes_n,nodes_v = import_fem_bar("./msh/bar_"*string(ndiv)*".msh","./msh/bar_"*string(ndiv_n)*".msh","./msh/bar_"*string(ndiv_v)*".msh")
nโ = length(nodes)
nโ = length(nodes_n)
nแตฅ = length(nodes_v)

sโ = 1.5/ndiv_n*ones(nโ)
sแตฅ = 1.5/ndiv_v*ones(nแตฅ)

push!(nodes_n,:sโ=>sโ,:sโ=>sโ,:sโ=>sโ)
push!(nodes_v,:sโ=>sแตฅ,:sโ=>sแตฅ,:sโ=>sแตฅ)

set๐ญ!(elements["ฮฉ"])
setโ๐ญ!(elements["ฮฉ"])
set๐ญ!(elements["ฮฉโฟ"])
set๐ญ!(elements["ฮฉแต"])
set๐ญ!(elements["ฮแต"])
set๐ญ!(elements["ฮแต"])
i=1/10
R = 1
h = R*i
E = 3e6
I = h^3/12
A = h
EI = E*I
EA = E*A
kGA = EA/2*5/6
P  = 1000

ApproxOperator.prescribe!(elements["ฮแต"],:gโ=>(x,y,z)->0.0)
ApproxOperator.prescribe!(elements["ฮแต"],:gโ=>(x,y,z)->0.0)
ApproxOperator.prescribe!(elements["ฮแต"],:gโ=>(x,y,z)->0.0)
ApproxOperator.prescribe!(elements["ฮแต"],:nโโ=>(x,y,z)->1.0)
ApproxOperator.prescribe!(elements["ฮแต"],:nโโ=>(x,y,z)->0.0)
ApproxOperator.prescribe!(elements["ฮแต"],:nโโ=>(x,y,z)->1.0)

ops = [
    #    Operator{:โซฮบฮตฮณds}(:EI=>EI,:EA=>EA,:kGA=>kGA,:R=>R),
       Operator{:โซฮบMds}(:EI=>EI),
       Operator{:โซฮตNds}(:R=>R),
       Operator{:โซฮณVds}(:R=>R),
       Operator{:โซnNds}(:EA=>EA),
       Operator{:โซvVds}(:kGA=>kGA),
       Operator{:โซvแตขtแตขds}(),
       Operator{:โซvแตขฮธแตขds}(:ฮฑ=>1e9*E),
   #     Operator{:Hโ_PlaneStress}(:E=>E,:ฮฝ=>ฮฝ),
   #     Operator{:Hโ_Incompressible}(:E=>E,:ฮฝ=>ฮฝ),
]

kแตแต = zeros(3*nโ,3*nโ)
kแตโฟ = zeros(3*nโ,nโ)
kแตแต = zeros(3*nโ,nแตฅ)
kโฟโฟ = zeros(nโ,nโ)
kแตแต = zeros(nแตฅ,nแตฅ)
f = zeros(3*nโ)
f[3*nโ-1] += P

ops[1](elements["ฮฉ"],kแตแต)
ops[2](elements["ฮฉ"],elements["ฮฉโฟ"],kแตโฟ)
ops[3](elements["ฮฉ"],elements["ฮฉแต"],kแตแต)
ops[4](elements["ฮฉโฟ"],kโฟโฟ)
ops[5](elements["ฮฉแต"],kแตแต)
ops[7](elements["ฮแต"],kแตแต,f)

k = [kแตแต kแตโฟ kแตแต;kแตโฟ' kโฟโฟ zeros(nโ,nแตฅ);kแตแต' zeros(nแตฅ,nโ) kแตแต]
f = [f;zeros(nโ);zeros(nแตฅ)]
d = k\f
dโ = d[1:3:3*nโ]
dโ = d[2:3:3*nโ]
dโ = d[3:3:3*nโ]

push!(nodes,:dโ=>dโ,:dโ=>dโ,:dโ=>dโ)

ฮธ = P*R^2/EI
u = P*R^3/2/EI-P*R/2/kGA-P*R/2/EA
v = ฯ*P*R^3/4/EI+ฯ*P*R/4/kGA+ฯ*P*R/4/EA

eแต = dโ[2]/u
eหข = dโ[2]/v
eแต = dโ[2]/ฮธ
